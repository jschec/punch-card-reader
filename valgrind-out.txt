==33164== Memcheck, a memory error detector
==33164== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==33164== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==33164== Command: ./myprog
==33164== 
==33164== 
==33164== Process terminating with default action of signal 2 (SIGINT)
==33164==    at 0x4B6A142: read (read.c:26)
==33164==    by 0x4AECD1E: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:517)
==33164==    by 0x4AEE105: _IO_default_uflow (genops.c:362)
==33164==    by 0x4966720: __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==33164==    by 0x4921549: std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==33164==    by 0x10B55A: operator>>(std::istream&, PunchCard&) (PunchCard.cpp:145)
==33164==    by 0x10ADB5: main (CardReader.cpp:95)
==33164== 
==33164== HEAP SUMMARY:
==33164==     in use at exit: 121 bytes in 1 blocks
==33164==   total heap usage: 5 allocs, 4 frees, 73,941 bytes allocated
==33164== 
==33164== LEAK SUMMARY:
==33164==    definitely lost: 0 bytes in 0 blocks
==33164==    indirectly lost: 0 bytes in 0 blocks
==33164==      possibly lost: 0 bytes in 0 blocks
==33164==    still reachable: 121 bytes in 1 blocks
==33164==         suppressed: 0 bytes in 0 blocks
==33164== Reachable blocks (those to which a pointer was found) are not shown.
==33164== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==33164== 
==33164== For lists of detected and suppressed errors, rerun with: -s
==33164== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
